// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id            String    @id @default(cuid())
  email         String    @unique
  name          String
  password      String
  currentTeamId String?
  weekStart     WeekStart

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  currentTeam        Organizations?  @relation("UserCurrentTeam", fields: [currentTeamId], references: [id], onDelete: Restrict)
  ownedOrganizations Organizations[] @relation("OrganizationOwner")
  members            Member[]
}

enum WeekStart {
  monday
  tuesday
  wednesday
  thursday
  friday
  saturday
  sunday
}

model Organizations {
  id             String   @id @default(cuid())
  userId         String
  name           String
  personalTeam   Boolean
  dateFormat     String
  intervalFormat String
  timeFormat     String
  numberFormat   String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  currentTeamUsers User[]                   @relation("UserCurrentTeam")
  owner            User                     @relation("OrganizationOwner", fields: [userId], references: [id], onDelete: Restrict)
  members          Member[]
  invitations      OrganizationInvitation[]
}

model Member {
  id             String   @id @default(cuid())
  userId         String
  organizationId String
  role           String?
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  user         User          @relation(fields: [userId], references: [id], onDelete: Restrict)
  organization Organizations @relation(fields: [organizationId], references: [id], onDelete: Restrict)

  @@unique([userId, organizationId])
}

model OrganizationInvitation {
  id             String   @id @default(cuid())
  email          String
  organizationId String
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt

  organization Organizations @relation(fields: [organizationId], references: [id], onDelete: Restrict)

  @@unique([email, organizationId])
}
